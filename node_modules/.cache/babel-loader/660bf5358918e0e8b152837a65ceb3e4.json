{"ast":null,"code":"var _jsxFileName = \"/Users/arifretiwala/python-project/front-end/final_1/cshah/Cash-My-Device/src/components/pages/navigation/Support/trackYourOrder.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { ErrorMessage, Field, FieldArray, Form, Formik } from 'formik';\nimport Recaptcha from 'react-recaptcha';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport Support from './Support';\nimport { UserTradeInfoById } from '../../../../services/myAccountService';\nimport { checkOutDataAsGuestById } from '../../../../services/addressService';\nimport { isEmpty } from \"../../../../validation/index\";\nimport Stepper from '../../../Stepper/index';\n\nconst TrackYourOrder = props => {\n  const [myOrderTrade, setMyOrderTrade] = useState();\n  const [orderNo, setOrderNo] = useState();\n  const [isOrder, setIsOrder] = useState(false);\n\n  const handleSubmit = value => {\n    setMyOrderTrade();\n    setOrderNo(value.orderId);\n\n    if (props.token) {\n      UserTradeInfoById(value.orderId).then(res => {\n        if (!isEmpty(res.data)) {\n          inProgressStepper(res.data.results);\n          setIsOrder(false);\n        } else {\n          setIsOrder(true);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      checkOutDataAsGuestById(value.orderId).then(res => {\n        if (!isEmpty(res.data)) {\n          inProgressStepper(res.data.results);\n          setIsOrder(false);\n        } else {\n          setIsOrder(true);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const inProgressStepper = async obj => {\n    await obj.map(x => {\n      if (x.status == null) {\n        const step = [];\n\n        if (isEmpty(x.orderDate)) {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 0\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 0\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 0\n          }, {\n            title: \"Payment processed\",\n            activeStep: 0\n          });\n        } else if (!isEmpty(x.totalPayment) || !isEmpty(x.paymentMethod)) {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 5\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 5\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 5\n          }, {\n            title: \"Waiting for Your acceptance\",\n            activeStep: 5\n          }, {\n            title: \"Device Accepted\",\n            activeStep: 5\n          }, {\n            title: \"Payment processed\",\n            activeStep: 5\n          });\n        } else if (!isEmpty(x.deviceAccepted) && x.deviceAccepted === \"yes\" && !isEmpty(x.deviceAccepted)) {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 4\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 4\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 4\n          }, {\n            title: \"Waiting for Your acceptance\",\n            activeStep: 4\n          }, {\n            title: \"Device Accepted\",\n            activeStep: 4\n          }, {\n            title: \"Payment processed\",\n            activeStep: 4\n          });\n        } else if (!isEmpty(x.deviceTrackingOutbound) && x.deviceAccepted === \"no\") {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 3\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 3\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 3\n          }, {\n            title: \"Sent you a item back\",\n            activeStep: 3\n          });\n        } else if (!isEmpty(x.deviceAccepted) && x.deviceAccepted === \"yes\") {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 3\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 3\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 3\n          }, {\n            title: \"Waiting for Your acceptance\",\n            activeStep: 3\n          }, {\n            title: \"Device Accepted\",\n            activeStep: 3\n          }, {\n            title: \"Payment processed\",\n            activeStep: 3\n          });\n        } else if (!isEmpty(x.deviceAccepted) && x.deviceAccepted === \"no\") {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 2\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 2\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 2\n          }, {\n            title: \"Sent you a item back\",\n            activeStep: 2\n          });\n        } else if (!isEmpty(x.deviceAccepted)) {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 3\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 3\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 3\n          }, {\n            title: \"Device Accepted\",\n            activeStep: 3\n          }, {\n            title: \"Payment processed\",\n            activeStep: 3\n          });\n        } else if (!isEmpty(x.deviceAccepted) && x.deviceReview === \"requested\") {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 3\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 3\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 3\n          }, {\n            title: \"Waiting for Your acceptance\",\n            activeStep: 3\n          }, {\n            title: \"Payment processed\",\n            activeStep: 3\n          });\n        } else if (!isEmpty(x.deviceReview) && x.deviceReview === \"ok\") {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 2\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 2\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 2\n          }, {\n            title: \"Device Accepted\",\n            activeStep: 2\n          }, {\n            title: \"Payment processed\",\n            activeStep: 2\n          });\n        } else if (!isEmpty(x.deviceReview) && x.deviceReview === \"requested\") {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 2\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 2\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 2\n          }, {\n            title: \"Waiting for Your acceptance\",\n            activeStep: 2\n          }, {\n            title: \"Payment processed\",\n            activeStep: 2\n          });\n        } else if (!isEmpty(x.deviceReceived)) {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 2\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 2\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 2\n          }, {\n            title: \"Payment processed\",\n            activeStep: 2\n          });\n        } else if (isEmpty(x.deviceReceived)) {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 1\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 1\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 1\n          }, {\n            title: \"Payment processed\",\n            activeStep: 2\n          });\n        } else if (!isEmpty(x.lableSent) || !isEmpty(x.deviceTrackingInbound) || !isEmpty(x.deviceShippingMethod)) {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 1\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 1\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 1\n          }, {\n            title: \"Payment processed\",\n            activeStep: 1\n          });\n        } else if (isEmpty(x.lableSent) && isEmpty(x.deviceTrackingInbound) && isEmpty(x.deviceShippingMethod)) {\n          step.push({\n            title: \"Order placed\",\n            activeStep: 0\n          }, {\n            title: \"Shipping label sent\",\n            activeStep: 0\n          }, {\n            title: \"Shipping received & device review\",\n            activeStep: 0\n          }, {\n            title: \"Payment processed\",\n            activeStep: 0\n          });\n        }\n\n        x.steps = step;\n        return x;\n      } else {\n        return x;\n      }\n    });\n    setMyOrderTrade(obj);\n  };\n\n  const sendTicketSchema = Yup.object().shape({\n    orderId: Yup.string().required('Order id required!')\n  });\n  const initialValues = {\n    orderId: \"\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Support, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: sendTicketSchema,\n    render: ({\n      values,\n      setFieldValue\n    }) => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FieldArray, {\n      name: \"devices\",\n      render: arrayHelpers => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        className: \"form-control\",\n        placeholder: \"Enter your order id\",\n        type: \"text\",\n        name: \"orderId\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"orderId\",\n        className: \"text-danger\",\n        component: \"div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12 mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"px-5 btn btn-outline-primary btn-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 41\n        }\n      }, \"Search\"))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, !isEmpty(myOrderTrade) && myOrderTrade.map((item, index) => {\n    if (item.status === null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-4 border-bottom bg-aliceblue row\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 37\n        }\n      }, \"Trade Reference No : \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 65\n        }\n      }, item.tradeReferenceNo))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 37\n        }\n      }, \"Date : \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 51\n        }\n      }, moment(item.orderDate).format('MM-DD-YYYY')))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 37\n        }\n      }, \"Address : \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 54\n        }\n      }, item.address))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 37\n        }\n      }, \"Payment Method : \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 61\n        }\n      }, item.paymentMethod))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12 mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Stepper, {\n        steps: item.steps,\n        activeStep: item.steps[0].activeStep,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 37\n        }\n      })));\n    }\n  }), isEmpty(myOrderTrade) && isOrder && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2 text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, \"order no not found with \", orderNo, \" doesn\\u2019t exist please try again\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackYourOrder);","map":{"version":3,"sources":["/Users/arifretiwala/python-project/front-end/final_1/cshah/Cash-My-Device/src/components/pages/navigation/Support/trackYourOrder.js"],"names":["React","useEffect","useState","ErrorMessage","Field","FieldArray","Form","Formik","Recaptcha","Yup","connect","moment","Support","UserTradeInfoById","checkOutDataAsGuestById","isEmpty","Stepper","TrackYourOrder","props","myOrderTrade","setMyOrderTrade","orderNo","setOrderNo","isOrder","setIsOrder","handleSubmit","value","orderId","token","then","res","data","inProgressStepper","results","catch","err","console","log","obj","map","x","status","step","orderDate","push","title","activeStep","totalPayment","paymentMethod","deviceAccepted","deviceTrackingOutbound","deviceReview","deviceReceived","lableSent","deviceTrackingInbound","deviceShippingMethod","steps","sendTicketSchema","object","shape","string","required","initialValues","values","setFieldValue","arrayHelpers","item","index","tradeReferenceNo","format","address","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ErrorMessage, Field, FieldArray, Form, Formik } from 'formik';\nimport Recaptcha from 'react-recaptcha';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport moment from 'moment'\n\nimport Support from './Support';\nimport { UserTradeInfoById } from '../../../../services/myAccountService'\nimport { checkOutDataAsGuestById } from '../../../../services/addressService'\nimport { isEmpty } from \"../../../../validation/index\";\nimport Stepper from '../../../Stepper/index';\n\n\nconst TrackYourOrder = (props) => {\n\n    const [myOrderTrade, setMyOrderTrade] = useState()\n    const [orderNo, setOrderNo] = useState()\n    const [isOrder, setIsOrder] = useState(false)\n\n    const handleSubmit = (value) => {\n        setMyOrderTrade()\n        setOrderNo(value.orderId)\n        if (props.token) {\n            UserTradeInfoById(value.orderId).then((res) => {\n                if (!isEmpty(res.data)) {\n                    inProgressStepper(res.data.results);\n                    setIsOrder(false);\n                } else {\n                    setIsOrder(true);\n                }\n            }).catch((err) => {\n                console.log(err);\n            })\n        } else {\n            checkOutDataAsGuestById(value.orderId).then((res) => {\n                if (!isEmpty(res.data)) {\n                    inProgressStepper(res.data.results);\n                    setIsOrder(false);\n                } else {\n                    setIsOrder(true);\n                }\n            }).catch((err) => {\n                console.log(err);\n            })\n        }\n    }\n\n    const inProgressStepper = async (obj) => {\n        await obj.map(x => {\n            if (x.status == null) {\n                const step = []\n                if (isEmpty(x.orderDate)) {\n                    step.push({ title: \"Order placed\", activeStep: 0 }, { title: \"Shipping label sent\", activeStep: 0 },\n                        { title: \"Shipping received & device review\", activeStep: 0 }, { title: \"Payment processed\", activeStep: 0 })\n                }\n                else if (!isEmpty(x.totalPayment) || !isEmpty(x.paymentMethod)) {\n                    step.push({ title: \"Order placed\", activeStep: 5 }, { title: \"Shipping label sent\", activeStep: 5 },\n                        { title: \"Shipping received & device review\", activeStep: 5 }, { title: \"Waiting for Your acceptance\", activeStep: 5 }, { title: \"Device Accepted\", activeStep: 5 }, { title: \"Payment processed\", activeStep: 5 })\n                }\n                else if (!isEmpty(x.deviceAccepted) && x.deviceAccepted === \"yes\" && !isEmpty(x.deviceAccepted)) {\n                    step.push({ title: \"Order placed\", activeStep: 4 }, { title: \"Shipping label sent\", activeStep: 4 },\n                        { title: \"Shipping received & device review\", activeStep: 4 }, { title: \"Waiting for Your acceptance\", activeStep: 4 }, { title: \"Device Accepted\", activeStep: 4 }, { title: \"Payment processed\", activeStep: 4 })\n                }\n                else if (!isEmpty(x.deviceTrackingOutbound) && x.deviceAccepted === \"no\") {\n                    step.push({ title: \"Order placed\", activeStep: 3 }, { title: \"Shipping label sent\", activeStep: 3 },\n                        { title: \"Shipping received & device review\", activeStep: 3 }, { title: \"Sent you a item back\", activeStep: 3 })\n                }\n                else if (!isEmpty(x.deviceAccepted) && x.deviceAccepted === \"yes\") {\n                    step.push({ title: \"Order placed\", activeStep: 3 }, { title: \"Shipping label sent\", activeStep: 3 },\n                        { title: \"Shipping received & device review\", activeStep: 3 }, { title: \"Waiting for Your acceptance\", activeStep: 3 }, { title: \"Device Accepted\", activeStep: 3 }, { title: \"Payment processed\", activeStep: 3 })\n                }\n                else if (!isEmpty(x.deviceAccepted) && x.deviceAccepted === \"no\") {\n                    step.push({ title: \"Order placed\", activeStep: 2 }, { title: \"Shipping label sent\", activeStep: 2 },\n                        { title: \"Shipping received & device review\", activeStep: 2 }, { title: \"Sent you a item back\", activeStep: 2 })\n                }\n                else if (!isEmpty(x.deviceAccepted)) {\n                    step.push({ title: \"Order placed\", activeStep: 3 }, { title: \"Shipping label sent\", activeStep: 3 },\n                        { title: \"Shipping received & device review\", activeStep: 3 }, { title: \"Device Accepted\", activeStep: 3 },\n                        { title: \"Payment processed\", activeStep: 3 })\n                }\n                else if (!isEmpty(x.deviceAccepted) && x.deviceReview === \"requested\") {\n                    step.push({ title: \"Order placed\", activeStep: 3 }, { title: \"Shipping label sent\", activeStep: 3 },\n                        { title: \"Shipping received & device review\", activeStep: 3 }, { title: \"Waiting for Your acceptance\", activeStep: 3 }, { title: \"Payment processed\", activeStep: 3 })\n                }\n                else if (!isEmpty(x.deviceReview) && x.deviceReview === \"ok\") {\n                    step.push({ title: \"Order placed\", activeStep: 2 }, { title: \"Shipping label sent\", activeStep: 2 },\n                        { title: \"Shipping received & device review\", activeStep: 2 }, { title: \"Device Accepted\", activeStep: 2 },\n                        { title: \"Payment processed\", activeStep: 2 })\n                }\n                else if (!isEmpty(x.deviceReview) && x.deviceReview === \"requested\") {\n                    step.push({ title: \"Order placed\", activeStep: 2 }, { title: \"Shipping label sent\", activeStep: 2 },\n                        { title: \"Shipping received & device review\", activeStep: 2 }, { title: \"Waiting for Your acceptance\", activeStep: 2 }, { title: \"Payment processed\", activeStep: 2 })\n                }\n                else if (!isEmpty(x.deviceReceived)) {\n                    step.push({ title: \"Order placed\", activeStep: 2 }, { title: \"Shipping label sent\", activeStep: 2 },\n                        { title: \"Shipping received & device review\", activeStep: 2 }, { title: \"Payment processed\", activeStep: 2 })\n                }\n                else if (isEmpty(x.deviceReceived)) {\n                    step.push({ title: \"Order placed\", activeStep: 1 },\n                        { title: \"Shipping label sent\", activeStep: 1 },\n                        { title: \"Shipping received & device review\", activeStep: 1 }, { title: \"Payment processed\", activeStep: 2 })\n                }\n                else if (!isEmpty(x.lableSent) || !isEmpty(x.deviceTrackingInbound) || !isEmpty(x.deviceShippingMethod)) {\n                    step.push({ title: \"Order placed\", activeStep: 1 },\n                        { title: \"Shipping label sent\", activeStep: 1 },\n                        { title: \"Shipping received & device review\", activeStep: 1 }, { title: \"Payment processed\", activeStep: 1 })\n                } else if (isEmpty(x.lableSent) && isEmpty(x.deviceTrackingInbound) && isEmpty(x.deviceShippingMethod)) {\n                    step.push({ title: \"Order placed\", activeStep: 0 }, { title: \"Shipping label sent\", activeStep: 0 },\n                        { title: \"Shipping received & device review\", activeStep: 0 }, { title: \"Payment processed\", activeStep: 0 })\n                }\n                x.steps = step;\n                return x\n            } else {\n                return x\n            }\n        })\n        setMyOrderTrade(obj)\n    }\n\n    const sendTicketSchema = Yup.object().shape({\n        orderId: Yup.string()\n            .required('Order id required!'),\n    })\n\n    const initialValues = {\n        orderId: \"\"\n    }\n\n    return (\n        <div>\n            <Support {...props}></Support>\n            <br />\n            <Formik\n                initialValues={initialValues}\n                onSubmit={handleSubmit}\n                validationSchema={sendTicketSchema}\n                render={({ values, setFieldValue }) => (\n                    <Form>\n                        <FieldArray\n                            name=\"devices\"\n                            render={arrayHelpers => (\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <Field className=\"form-control\" placeholder=\"Enter your order id\" type=\"text\" name=\"orderId\" />\n                                        <ErrorMessage name=\"orderId\" className=\"text-danger\" component=\"div\" />\n                                    </div>\n                                    <div className=\"col-md-12 mt-4\">\n                                        <button type=\"submit\" className=\"px-5 btn btn-outline-primary btn-lg\">\n                                            Search\n                                        </button>\n                                    </div>\n                                </div>\n                            )}\n                        />\n                    </Form>\n                )}\n            />\n\n            <div>\n                {!isEmpty(myOrderTrade) && myOrderTrade.map((item, index) => {\n                    if (item.status === null) {\n                        return (\n                            <div className=\"m-4 border-bottom bg-aliceblue row\" key={index}>\n                                <div className=\"col-md-6 mt-3\">\n                                    <label>Trade Reference No : <span className=\"ml-2\">{item.tradeReferenceNo}</span></label>\n                                </div>\n                                <div className=\"col-md-6 mt-3\">\n                                    <label>Date : <span className=\"ml-2\">{moment(item.orderDate).format('MM-DD-YYYY')}</span></label>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <label>Address : <span className=\"ml-2\">{item.address}</span></label>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <label>Payment Method : <span className=\"ml-2\">{item.paymentMethod}</span></label>\n                                </div>\n                                <div className=\"col-md-12 mb-4\">\n                                    <Stepper steps={item.steps} activeStep={item.steps[0].activeStep} />\n                                </div>\n                            </div>\n                        )\n                    }\n                }\n                )}\n                {isEmpty(myOrderTrade) && isOrder &&\n                    <div className=\"mt-2 text-danger\">\n                        order no not found with {orderNo} doesn’t exist please try again\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackYourOrder);\n\n"]},"metadata":{},"sourceType":"module"}