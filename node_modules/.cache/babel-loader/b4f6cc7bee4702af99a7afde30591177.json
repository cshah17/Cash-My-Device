{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nconst instance = axios.create({});\ninstance.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    const {\n      status,\n      data\n    } = error.response;\n\n    if (status) {\n      console.log('error with status code : ', status);\n\n      if (status === 401) {\n        window.location.href = '/401';\n      }\n\n      if (status === 404) {\n        window.location.href = '/404';\n      }\n\n      if (status === 501) {\n        window.location.href = '/501';\n      }\n    }\n\n    if (data && data.message) {\n      toast.error(data.message);\n    }\n  }\n\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"sources":["/Users/arifretiwala/python-project/front-end/final_1/cshah/Cash-My-Device/src/services/api.js"],"names":["axios","toast","instance","create","interceptors","response","use","error","status","data","console","log","window","location","href","message","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa,EAAb,CAAjB;AAGAD,QAAQ,CAACE,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACID,QAAQ,IAAIA,QADhB,EAEIE,KAAK,IAAI;AACL,MAAIA,KAAK,CAACF,QAAV,EAAoB;AAChB,UAAM;AAAEG,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAmBF,KAAK,CAACF,QAA/B;;AACA,QAAIG,MAAJ,EAAY;AACRE,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCH,MAAzC;;AACA,UAAIA,MAAM,KAAK,GAAf,EAAoB;AAChBI,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,MAAvB;AACH;;AACD,UAAIN,MAAM,KAAK,GAAf,EAAoB;AAChBI,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,MAAvB;AACH;;AACD,UAAIN,MAAM,KAAK,GAAf,EAAoB;AAChBI,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,MAAvB;AACH;AACJ;;AACD,QAAIL,IAAI,IAAIA,IAAI,CAACM,OAAjB,EAA0B;AACtBd,MAAAA,KAAK,CAACM,KAAN,CAAYE,IAAI,CAACM,OAAjB;AACH;AACJ;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeV,KAAf,CAAP;AACH,CAtBL;AAyBA,eAAeL,QAAf","sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst instance = axios.create({\n});\n\ninstance.interceptors.response.use(\n    response => response,\n    error => {\n        if (error.response) {\n            const { status, data } = error.response;\n            if (status) {\n                console.log('error with status code : ', status);\n                if (status === 401) {\n                    window.location.href = '/401';\n                }\n                if (status === 404) {\n                    window.location.href = '/404';\n                }\n                if (status === 501) {\n                    window.location.href = '/501';\n                }\n            }\n            if (data && data.message) {\n                toast.error(data.message);\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;\n\n"]},"metadata":{},"sourceType":"module"}