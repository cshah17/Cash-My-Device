{"ast":null,"code":"var _jsxFileName = \"/Users/arifretiwala/python-project/front-end/final_1/cshah/Cash-My-Device/src/components/pages/devices/Payment.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport { userPaymentInfo } from \"../../../services/addressService\";\nimport * as actions from '../../../store/actions/cart';\nimport Stepper from '../../Stepper/index';\nimport Button from 'react-bootstrap/Button';\nimport { isEmpty } from '../../../validation';\nimport { phoneRegex } from \"../../../validation/validation\";\n\nconst PaymentPage = props => {\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState();\n  const fromRef = useRef();\n\n  const previousPage = () => {\n    props.history.push(\"/cart\");\n  };\n\n  const handleSubmit = value => {\n    if (selectedPaymentMethod) {\n      value.method = selectedPaymentMethod;\n      props.history.push(\"/cart/address\");\n\n      if (props.token) {\n        const paymentObj = {\n          paymentMethod: value.method,\n          name: value.name,\n          username: value.useName,\n          Phone: value.phone,\n          email: value.email\n        };\n        userPaymentInfo(paymentObj).then(res => {\n          value.paymentId = res.data.id;\n          props.addPayment(value);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        props.addPayment(value);\n      }\n    }\n  };\n\n  const paymentSchema = Yup.object().shape({\n    name: Yup.string().required('Please enter name'),\n    useName: Yup.string().required('Please enter user name'),\n    phone: Yup.string().matches(phoneRegex, \"Please enter valid contact number\").required('Please enter phone number'),\n    email: Yup.string().email('Please enter valid email!').required('Please enter email')\n  });\n  const paymentCashappSchema = Yup.object().shape({\n    name: Yup.string().required('Please enter name'),\n    cashTag: Yup.string().required('Please enter cash tag'),\n    phone: Yup.string().matches(phoneRegex, \"Please enter valid contact number\").required('Please enter phone number'),\n    email: Yup.string().email('Please enter valid email!').required('Please enter email')\n  });\n  const paymentZelleSchema = Yup.object().shape({\n    name: Yup.string().required('Please enter name'),\n    phone: Yup.string().matches(phoneRegex, \"Please enter valid contact number\").required('Please enter phone number'),\n    email: Yup.string().email('Please enter valid email!').required('Please enter email')\n  });\n  useEffect(() => {// if (isEmpty(props.items)) {\n    //     props.history.push(\"/cart\");\n    // }\n  });\n\n  const nextButton = () => {\n    if (fromRef.current) {\n      fromRef.current.handleSubmit();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, props.totalPayment >= 1 && /*#__PURE__*/React.createElement(Stepper, {\n    steps: [{\n      title: \"Select\"\n    }, {\n      title: \"Payment\"\n    }, {\n      title: \"Address\"\n    }, {\n      title: \"Checkout\"\n    }],\n    activeStep: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }), props.totalPayment === 0 && /*#__PURE__*/React.createElement(Stepper, {\n    steps: [{\n      title: \"Select\"\n    }, {\n      title: \"Address\"\n    }, {\n      title: \"Checkout\"\n    }],\n    activeStep: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"How Would you like to get paid: \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4 ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Payment method: \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mt-3 mr-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 p-3 bg-aliceblue rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, \"Paypal\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"float-right\",\n    onClick: () => setSelectedPaymentMethod('Paypal'),\n    type: \"radio\",\n    value: \"Paypal\",\n    name: \"method\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 152\n    }\n  }), selectedPaymentMethod === 'Paypal' && /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      useName: '',\n      phone: '',\n      email: ''\n    },\n    onSubmit: handleSubmit,\n    validationSchema: paymentSchema,\n    innerRef: fromRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 45\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"name\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }, \"User name:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"useName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"useName\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 45\n    }\n  }, \"Phone:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"phone\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 45\n    }\n  }, \"Email :\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"email\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 49\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 p-3 bg-aliceblue rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, \"Venmo\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"float-right\",\n    onClick: () => setSelectedPaymentMethod('Venmo'),\n    type: \"radio\",\n    value: \"Venmo\",\n    name: \"method\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 149\n    }\n  }), selectedPaymentMethod === 'Venmo' && /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      useName: '',\n      phone: '',\n      email: ''\n    },\n    onSubmit: handleSubmit,\n    validationSchema: paymentSchema,\n    innerRef: fromRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 66\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 45\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"name\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 45\n    }\n  }, \"User name:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"useName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"useName\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 45\n    }\n  }, \"Phone:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"phone\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 45\n    }\n  }, \"Email :\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"email\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 49\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 p-3 bg-aliceblue rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, \"Cash app\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"float-right\",\n    onClick: () => setSelectedPaymentMethod('cashapp'),\n    type: \"radio\",\n    value: \"cashapp\",\n    name: \"method\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 153\n    }\n  }), selectedPaymentMethod === 'cashapp' && /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      cashTag: '',\n      phone: '',\n      email: ''\n    },\n    onSubmit: handleSubmit,\n    validationSchema: paymentCashappSchema,\n    innerRef: fromRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 68\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 45\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"name\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 45\n    }\n  }, \"Cash tag:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"cashTag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"cashTag\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 45\n    }\n  }, \"Phone:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"phone\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 45\n    }\n  }, \"Email :\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"email\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 49\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 p-3 bg-aliceblue rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }, \"Zelle\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"float-right\",\n    onClick: () => setSelectedPaymentMethod('Zelle'),\n    type: \"radio\",\n    value: \"Zelle\",\n    name: \"method\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 149\n    }\n  }), selectedPaymentMethod === 'Zelle' && /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      useName: '',\n      phone: '',\n      email: ''\n    },\n    onSubmit: handleSubmit,\n    validationSchema: paymentZelleSchema,\n    innerRef: fromRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 29\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 45\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"name\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 45\n    }\n  }, \"Phone:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"phone\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 45\n    }\n  }, \"Email :\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"email\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 49\n    }\n  })))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4 ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 mt-4 d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"w-100\",\n    onClick: previousPage,\n    variant: \"secondary ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, \"previous\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"w-100\",\n    onClick: nextButton,\n    variant: \"secondary ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 21\n    }\n  }, \"Next\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    method: state.cart.payment.method,\n    totalPayment: state.cart.totalPayment,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPayment: value => dispatch(actions.updateCartPayment(value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentPage);","map":{"version":3,"sources":["/Users/arifretiwala/python-project/front-end/final_1/cshah/Cash-My-Device/src/components/pages/devices/Payment.js"],"names":["React","useEffect","useState","useRef","Yup","ErrorMessage","Field","Form","Formik","connect","userPaymentInfo","actions","Stepper","Button","isEmpty","phoneRegex","PaymentPage","props","selectedPaymentMethod","setSelectedPaymentMethod","fromRef","previousPage","history","push","handleSubmit","value","method","token","paymentObj","paymentMethod","name","username","useName","Phone","phone","email","then","res","paymentId","data","id","addPayment","catch","err","console","log","paymentSchema","object","shape","string","required","matches","paymentCashappSchema","cashTag","paymentZelleSchema","nextButton","current","totalPayment","title","isSubmitting","mapStateToProps","state","cart","payment","auth","mapDispatchToProps","dispatch","updateCartPayment"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport * as Yup from 'yup';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport { userPaymentInfo } from \"../../../services/addressService\";\n\nimport * as actions from '../../../store/actions/cart';\nimport Stepper from '../../Stepper/index';\nimport Button from 'react-bootstrap/Button';\nimport { isEmpty } from '../../../validation';\nimport { phoneRegex } from \"../../../validation/validation\";\n\nconst PaymentPage = (props) => {\n    const [selectedPaymentMethod, setSelectedPaymentMethod] = useState()\n    const fromRef = useRef()\n    const previousPage = () => {\n        props.history.push(\"/cart\");\n    }\n\n    const handleSubmit = (value) => {\n        if (selectedPaymentMethod) {\n            value.method = selectedPaymentMethod\n            props.history.push(\"/cart/address\");\n            if (props.token) {\n                const paymentObj = {\n                    paymentMethod: value.method,\n                    name: value.name,\n                    username: value.useName,\n                    Phone: value.phone,\n                    email: value.email\n                }\n                userPaymentInfo(paymentObj).then(\n                    (res) => {\n                        value.paymentId = res.data.id\n                        props.addPayment(value)\n                    }\n                ).catch(err => {\n                    console.log(err);\n                })\n            } else {\n                props.addPayment(value)\n            }\n        }\n    };\n\n    const paymentSchema = Yup.object().shape({\n        name: Yup.string()\n            .required('Please enter name'),\n        useName: Yup.string()\n            .required('Please enter user name'),\n        phone: Yup.string()\n            .matches(phoneRegex, \"Please enter valid contact number\")\n            .required('Please enter phone number'),\n        email: Yup.string()\n            .email('Please enter valid email!')\n            .required('Please enter email'),\n    });\n\n    const paymentCashappSchema = Yup.object().shape({\n        name: Yup.string()\n            .required('Please enter name'),\n        cashTag: Yup.string()\n            .required('Please enter cash tag'),\n        phone: Yup.string()\n            .matches(phoneRegex, \"Please enter valid contact number\")\n            .required('Please enter phone number'),\n        email: Yup.string()\n            .email('Please enter valid email!')\n            .required('Please enter email'),\n    });\n\n    const paymentZelleSchema = Yup.object().shape({\n        name: Yup.string()\n            .required('Please enter name'),\n        phone: Yup.string()\n            .matches(phoneRegex, \"Please enter valid contact number\")\n            .required('Please enter phone number'),\n        email: Yup.string()\n            .email('Please enter valid email!')\n            .required('Please enter email'),\n    });\n\n    useEffect(() => {\n        // if (isEmpty(props.items)) {\n        //     props.history.push(\"/cart\");\n        // }\n    });\n\n\n    const nextButton = () => {\n        if (fromRef.current) {\n            fromRef.current.handleSubmit()\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                {\n                    props.totalPayment >= 1 &&\n                    <Stepper steps={[{ title: \"Select\" }, { title: \"Payment\" }, { title: \"Address\" }, { title: \"Checkout\" }]} activeStep={1} />\n                }\n                {\n                    props.totalPayment === 0 &&\n                    <Stepper steps={[{ title: \"Select\" }, { title: \"Address\" }, { title: \"Checkout\" }]} activeStep={0} />\n                }\n            </div>\n            <div className=\"mt-5 ml-5\">\n                <h3>How Would you like to get paid: </h3>\n            </div>\n            <div className=\"mt-4 ml-5\">\n                <h4>Payment method: </h4>\n            </div>\n\n            <div className=\"row ml-4\">\n                <div className=\"col-md-12 mt-3 mr-3 \">\n                    <div className=\"col-md-4 p-3 bg-aliceblue rounded\">\n                        <label>Paypal</label>\n                        <input className=\"float-right\" onClick={() => setSelectedPaymentMethod('Paypal')} type=\"radio\" value=\"Paypal\" name=\"method\" /> <br />\n                        {\n                            selectedPaymentMethod === 'Paypal' &&\n                            <Formik\n                                initialValues={{ name: '', useName: '', phone: '', email: '' }}\n                                onSubmit={handleSubmit}\n                                validationSchema={paymentSchema}\n                                innerRef={fromRef}\n                            >\n                                {({ isSubmitting }) => (\n                                    <Form>\n                                        <div className=\"col-md-12 pl-0 mt-2\">\n                                            <label>\n                                                Name:\n                                               </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"name\" />\n                                                <ErrorMessage name=\"name\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12 pl-0\">\n                                            <label>\n                                                User name:\n                                               </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"useName\" />\n                                                <ErrorMessage name=\"useName\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12 pl-0\">\n                                            <label>\n                                                Phone:\n                                               </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"phone\" />\n                                                <ErrorMessage name=\"phone\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12 pl-0\">\n                                            <label>\n                                                Email :\n                                                </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"email\" />\n                                                <ErrorMessage name=\"email\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                    </Form>\n                                )}\n                            </Formik>\n                        }\n                    </div>\n                </div>\n                <div className=\"col-md-12 mt-3\">\n                    <div className=\"col-md-4 p-3 bg-aliceblue rounded\">\n                        <label>Venmo</label>\n                        <input className=\"float-right\" onClick={() => setSelectedPaymentMethod('Venmo')} type=\"radio\" value=\"Venmo\" name=\"method\" /><br />\n                        {\n                            selectedPaymentMethod === 'Venmo' && <Formik\n                                initialValues={{ name: '', useName: '', phone: '', email: '' }}\n                                onSubmit={handleSubmit}\n                                validationSchema={paymentSchema}\n                                innerRef={fromRef}\n                            >\n                                {({ isSubmitting }) => (\n                                    <Form>\n                                        <div className=\"col-md-12 pl-0 mt-2\">\n                                            <label>\n                                                Name:\n                                                </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"name\" />\n                                                <ErrorMessage name=\"name\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12 pl-0\">\n                                            <label>\n                                                User name:\n                                                </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"useName\" />\n                                                <ErrorMessage name=\"useName\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12 pl-0\">\n                                            <label>\n                                                Phone:\n                                                </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"phone\" />\n                                                <ErrorMessage name=\"phone\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12 pl-0\">\n                                            <label>\n                                                Email :\n                                               </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"email\" />\n                                                <ErrorMessage name=\"email\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                    </Form>\n                                )}\n                            </Formik>\n                        }\n                    </div>\n                </div>\n\n                <div className=\"col-md-12 mt-3\">\n                    <div className=\"col-md-4 p-3 bg-aliceblue rounded\">\n                        <label>Cash app</label>\n                        <input className=\"float-right\" onClick={() => setSelectedPaymentMethod('cashapp')} type=\"radio\" value=\"cashapp\" name=\"method\" /><br />\n                        {\n                            selectedPaymentMethod === 'cashapp' && <Formik\n                                initialValues={{ name: '', cashTag: '', phone: '', email: '' }}\n                                onSubmit={handleSubmit}\n                                validationSchema={paymentCashappSchema}\n                                innerRef={fromRef}\n                            >\n                                {({ isSubmitting }) => (\n                                    <Form>\n                                        <div className=\"col-md-12 pl-0 mt-2\">\n                                            <label>\n                                                Name:\n                                                </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"name\" />\n                                                <ErrorMessage name=\"name\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12 pl-0\">\n                                            <label>\n                                                Cash tag:\n                                             </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"cashTag\" />\n                                                <ErrorMessage name=\"cashTag\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12 pl-0\">\n                                            <label>\n                                                Phone:\n                                                </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"phone\" />\n                                                <ErrorMessage name=\"phone\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12 pl-0\">\n                                            <label>\n                                                Email :\n                                               </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"email\" />\n                                                <ErrorMessage name=\"email\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                    </Form>\n                                )}\n                            </Formik>\n                        }\n\n                    </div>\n                </div>\n\n                <div className=\"col-md-12 mt-3\">\n                    <div className=\"col-md-4 p-3 bg-aliceblue rounded\">\n                        <label>Zelle</label>\n                        <input className=\"float-right\" onClick={() => setSelectedPaymentMethod('Zelle')} type=\"radio\" value=\"Zelle\" name=\"method\" /><br />\n                        {\n                            selectedPaymentMethod === 'Zelle' &&\n                            <Formik\n                                initialValues={{ name: '', useName: '', phone: '', email: '' }}\n                                onSubmit={handleSubmit}\n                                validationSchema={paymentZelleSchema}\n                                innerRef={fromRef}\n                            >\n                                {({ isSubmitting }) => (\n                                    <Form>\n                                        <div className=\"col-md-12 pl-0 mt-2\">\n                                            <label>\n                                                Name:\n                                                 </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"name\" />\n                                                <ErrorMessage name=\"name\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12 pl-0\">\n                                            <label>\n                                                Phone:\n                                               </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"phone\" />\n                                                <ErrorMessage name=\"phone\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12 pl-0\">\n                                            <label>\n                                                Email :\n                                                </label>\n                                            <div>\n                                                <Field className=\"form-control\" type=\"text\" name=\"email\" />\n                                                <ErrorMessage name=\"email\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n                                    </Form>\n                                )}\n                            </Formik>\n                        }\n                    </div>\n                </div>\n            </div>\n            <div className=\"row mt-4 ml-1\">\n                <div className=\"col-md-6 mt-4 d-flex\">\n                    <Button className=\"w-100\" onClick={previousPage} variant=\"secondary ml-4\">previous</Button>\n                    <Button className=\"w-100\" onClick={nextButton} variant=\"secondary ml-4\">Next</Button>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        method: state.cart.payment.method,\n        totalPayment: state.cart.totalPayment,\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addPayment: (value) => dispatch(actions.updateCartPayment(value))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentPage);\n"]},"metadata":{},"sourceType":"module"}