{"ast":null,"code":"var _jsxFileName = \"/Users/arifretiwala/python-project/front-end/final_1/cshah/Cash-My-Device/src/container/SignUp.js\";\nimport React from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { passwordRegex } from '../validation/validation';\nimport * as actions from '../store/actions/auth';\n\nclass SignUpForm extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async values => {\n      this.state = {\n        username: '',\n        email: ''\n      };\n      const res = await this.props.onAuth(values.username, values.email, values.password1, values.password2);\n      this.setState({\n        username: res.username ? res.username[0] : '',\n        email: res.email ? res.email[0] : ''\n      });\n\n      if (res.status) {\n        this.props.history.push('/my-account', {\n          message: \"Youâ€™ve Successfully Signup!, Please confirm your email by clicking the link sent to your email to get the most out of your Account!\"\n        });\n      }\n    };\n\n    this.state = {\n      username: '',\n      email: ''\n    };\n  }\n\n  render() {\n    const initialValues = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: ''\n    };\n    const signUpSchema = Yup.object().shape({\n      username: Yup.string().required('Please input your username!'),\n      email: Yup.string().required('Please input your email!').email('Invalid email'),\n      password1: Yup.string().required('Please input your password1!').matches(passwordRegex, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"),\n      password2: Yup.string().required('Please input your password2!').oneOf([Yup.ref('password1'), null], 'Password1 do not match')\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: initialValues,\n      onSubmit: this.handleSubmit,\n      validationSchema: signUpSchema,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, ({\n      isSubmitting\n    }) => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, this.props.loading && /*#__PURE__*/React.createElement(LoadingOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 56\n      }\n    }) || /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-md-2 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 45\n      }\n    }, \"Username:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"username\",\n      className: \"text-danger\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 49\n      }\n    }), this.state.username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 73\n      }\n    }, this.state.username))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-md-2 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 45\n      }\n    }, \"Email:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"email\",\n      className: \"text-danger\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 49\n      }\n    }), this.state.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 70\n      }\n    }, this.state.email))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-md-2 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    }, \"password1:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      placeholder: \"Enter your password\",\n      type: \"password\",\n      name: \"password1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"password1\",\n      className: \"text-danger\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-md-2 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 45\n      }\n    }, \"password2:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      placeholder: \"Confirm your password\",\n      type: \"password\",\n      name: \"password2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"password2\",\n      className: \"text-danger\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-10 pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary mr-2\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 49\n      }\n    }, \"Submit\"), \"or\", /*#__PURE__*/React.createElement(NavLink, {\n      className: \"ml-2\",\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 45\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group api-response\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 45\n      }\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm);","map":{"version":3,"sources":["/Users/arifretiwala/python-project/front-end/final_1/cshah/Cash-My-Device/src/container/SignUp.js"],"names":["React","LoadingOutlined","connect","NavLink","ErrorMessage","Field","Form","Formik","Yup","passwordRegex","actions","SignUpForm","Component","constructor","handleSubmit","values","state","username","email","res","props","onAuth","password1","password2","setState","status","history","push","message","render","initialValues","signUpSchema","object","shape","string","required","matches","oneOf","ref","isSubmitting","loading","mapStateToProps","error","mapDispatchToProps","dispatch","authSignup"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { passwordRegex } from '../validation/validation'\nimport * as actions from '../store/actions/auth';\n\nclass SignUpForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            email: ''\n        }\n    }\n\n    handleSubmit = async (values) => {\n        this.state = {\n            username: '',\n            email: ''\n        }\n        const res = await this.props.onAuth(values.username, values.email, values.password1, values.password2)\n        this.setState({\n            username: res.username ? res.username[0] : '',\n            email: res.email ? res.email[0] : ''\n        })\n        if (res.status) {\n            this.props.history.push('/my-account', { message: \"Youâ€™ve Successfully Signup!, Please confirm your email by clicking the link sent to your email to get the most out of your Account!\" });\n        }\n    };\n\n    render() {\n        const initialValues = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n        }\n        const signUpSchema = Yup.object().shape({\n            username: Yup.string()\n                .required('Please input your username!'),\n            email: Yup.string()\n                .required('Please input your email!')\n                .email('Invalid email'),\n            password1: Yup.string()\n                .required('Please input your password1!')\n                .matches(passwordRegex, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n                ),\n            password2: Yup.string()\n                .required('Please input your password2!')\n                .oneOf([Yup.ref('password1'), null], 'Password1 do not match'),\n        });\n        return (\n            <div>\n                <Formik\n                    initialValues={initialValues}\n                    onSubmit={this.handleSubmit}\n                    validationSchema={signUpSchema}\n                >\n                    {({ isSubmitting }) => (\n                        <Form>\n                            <div className=\"row\">\n                                {this.props.loading && <LoadingOutlined /> ||\n                                    <>\n                                        <div className=\"col-md-8\">\n                                            <label className=\"col-md-2 mt-2\">\n                                                Username:\n                                           </label>\n                                            <div className=\"col-md-10\">\n                                                <Field className=\"form-control\" type=\"text\" name=\"username\" />\n                                                <ErrorMessage name=\"username\" className=\"text-danger\" component=\"div\" />\n                                                {this.state.username && <div className=\"text-danger\">{this.state.username}</div>}\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-md-8\">\n                                            <label className=\"col-md-2 mt-2\">\n                                                Email:\n                                           </label>\n                                            <div className=\"col-md-10\">\n                                                <Field className=\"form-control\" type=\"text\" name=\"email\" />\n                                                <ErrorMessage name=\"email\" className=\"text-danger\" component=\"div\" />\n                                                {this.state.email && <div className=\"text-danger\">{this.state.email}</div>}\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-md-8\">\n                                            <label className=\"col-md-2 mt-2\">\n                                                password1:\n                                           </label>\n                                            <div className=\"col-md-10\">\n                                                <Field className=\"form-control\" placeholder=\"Enter your password\" type=\"password\" name=\"password1\" />\n                                                <ErrorMessage name=\"password1\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-md-8\">\n                                            <label className=\"col-md-2 mt-2\">\n                                                password2:\n                                           </label>\n                                            <div className=\"col-md-10\">\n                                                <Field className=\"form-control\" placeholder=\"Confirm your password\" type=\"password\" name=\"password2\" />\n                                                <ErrorMessage name=\"password2\" className=\"text-danger\" component=\"div\" />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-md-8\">\n                                            <div className=\"col-md-10 pt-3\">\n                                                <button type=\"submit\" className=\"btn btn-primary mr-2\" disabled={isSubmitting}>\n                                                    Submit\n                                            </button>\n                                            or\n                                            <NavLink className=\"ml-2\" to='/login'>Login</NavLink>\n                                            <div className=\"form-group api-response\"></div>\n                                            </div>\n                                        </div>\n                                    </>\n                                }\n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm);"]},"metadata":{},"sourceType":"module"}