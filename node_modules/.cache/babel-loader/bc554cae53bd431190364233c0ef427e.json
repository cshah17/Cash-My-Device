{"ast":null,"code":"var _jsxFileName = \"/Users/arifretiwala/python-project/front-end/final_1/cshah/Cash-My-Device/src/container/PasswordResetConfirm.js\";\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as Yup from 'yup';\nimport isEmpty from '../validation/isEmpty';\nimport { confirmResetPassword } from '../services/authService';\nimport { passwordRegex } from '../validation/validation';\n\nconst PasswordResetConfirm = props => {\n  const {\n    uid,\n    token\n  } = useParams();\n  const [isError, setIsError] = useState(false);\n\n  const handleSubmit = values => {\n    const obj = {\n      uid,\n      token,\n      new_password1: values.password1,\n      new_password2: values.password2\n    };\n    confirmResetPassword(obj).then(res => {\n      if (!isEmpty(res)) {\n        this.props.history.push('/login', {\n          message: \"Your password has been reset please login with new password\"\n        });\n      } else {\n        setIsError(true);\n      }\n    }).catch(err => setIsError(true));\n  };\n\n  const initialValues = {\n    password1: '',\n    password2: ''\n  };\n  const loginSchema = Yup.object().shape({\n    password1: Yup.string().required('Please input your password1!').matches(passwordRegex, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"),\n    password2: Yup.string().required('Please input your password2!').oneOf([Yup.ref('password1'), null], 'Password1 do not match')\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: values => handleSubmit(values),\n    validationSchema: loginSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-info ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, \" To reset you password, Please enter your new password below. \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-md-2 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \"password1:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    placeholder: \"Enter your new password\",\n    type: \"password\",\n    name: \"password1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"password1\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-md-2 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"password2:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    placeholder: \"confirm your new password\",\n    type: \"password\",\n    name: \"password2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"password2\",\n    className: \"text-danger\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-10 pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, \"Submit\"))), isError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 p-2 ml-4 bg-dark text-white pl-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, \"link has expired please go to login page and use forget password and username link to received new link\"))))));\n};\n\nexport default PasswordResetConfirm;","map":{"version":3,"sources":["/Users/arifretiwala/python-project/front-end/final_1/cshah/Cash-My-Device/src/container/PasswordResetConfirm.js"],"names":["ErrorMessage","Field","Form","Formik","React","useState","useParams","Yup","isEmpty","confirmResetPassword","passwordRegex","PasswordResetConfirm","props","uid","token","isError","setIsError","handleSubmit","values","obj","new_password1","password1","new_password2","password2","then","res","history","push","message","catch","err","initialValues","loginSchema","object","shape","string","required","matches","oneOf","ref"],"mappings":"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","sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as Yup from 'yup';\n\nimport isEmpty from '../validation/isEmpty'\nimport { confirmResetPassword } from '../services/authService';\nimport { passwordRegex } from '../validation/validation';\n\n\nconst PasswordResetConfirm = (props) => {\n    const { uid, token } = useParams();\n    const [isError, setIsError] = useState(false)\n\n    const handleSubmit = (values) => {\n        const obj = {\n            uid,\n            token,\n            new_password1: values.password1,\n            new_password2: values.password2\n        }\n        confirmResetPassword(obj).then(\n            (res) => {\n                if (!isEmpty(res)) {\n                    this.props.history.push('/login', { message: \"Your password has been reset please login with new password\" });\n                } else {\n                    setIsError(true)\n                }\n            }\n        ).catch(err => setIsError(true))\n    };\n\n    const initialValues = {\n        password1: '',\n        password2: '',\n    }\n\n    const loginSchema = Yup.object().shape({\n        password1: Yup.string()\n            .required('Please input your password1!')\n            .matches(passwordRegex, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n            ),\n        password2: Yup.string()\n            .required('Please input your password2!')\n            .oneOf([Yup.ref('password1'), null], 'Password1 do not match'),\n    });\n\n    return (\n        <div>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={(values) => handleSubmit(values)}\n                validationSchema={loginSchema}\n            >\n                <Form>\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <h5 className=\"text-info ml-4\"> To reset you password, Please enter your new password below. </h5>\n                        </div>\n\n                        <div className=\"col-md-8\">\n                            <label className=\"col-md-2 mt-2\">\n                                password1:\n                             </label>\n                            <div className=\"col-md-10\">\n                                <Field className=\"form-control\" placeholder=\"Enter your new password\" type=\"password\" name=\"password1\" />\n                                <ErrorMessage name=\"password1\" className=\"text-danger\" component=\"div\" />\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-8\">\n                            <label className=\"col-md-2 mt-2\">\n                                password2:\n                            </label>\n                            <div className=\"col-md-10\">\n                                <Field className=\"form-control\" placeholder=\"confirm your new password\" type=\"password\" name=\"password2\" />\n                                <ErrorMessage name=\"password2\" className=\"text-danger\" component=\"div\" />\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-8\">\n                            <div className=\"col-md-10 pt-3\">\n                                <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                                    Submit\n                                </button>\n                            </div>\n                        </div>\n\n                        {\n                            isError && (\n                                <div className=\"col-md-8 mt-2\">\n                                    <div className=\"col-md-8 p-2 ml-4 bg-dark text-white pl-1\">\n                                        link has expired please go to login page and use forget password and username link to received new link\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </Form>\n            </Formik>\n        </div>\n    );\n}\n\nexport default PasswordResetConfirm;"]},"metadata":{},"sourceType":"module"}